import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
import matplotlib as plt

# Input data files are available in the "../input/" directory.
# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory

import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))
      
prediction = pd.read_csv("../input/digit-recognizer/sample_submission.csv")
test_csv = pd.read_csv("../input/digit-recognizer/test.csv")
train_csv = pd.read_csv("../input/digit-recognizer/train.csv")

'''
train dataset has 42000 rows, and 785 columns. 
Rows are examples
1st column is the label (answers)
All the rest(784) columns are pixel values

test set has 28000 rows, and 784 columns
test set does not include the answer column.
'''

train = train_csv.values.T # turn train set dataframe to numpy array form so it is easier to work with and scale it.
test = test_csv.values.T
y_values = train[[0],:] # bring y values  [3,1,4,6,2,0, ... ]
train = train[1:,:]

y = np.zeros((10,y_values.shape[1])) 
for i in range(y_values.shape[1]):
    y[y_values[0][i]][i] = 1 # one-hot encoding

print('y : ',y.shape)
print('train : ',train.shape)
print('test : ',test.shape)

# scaling dataset values to range (0,1)
train = train/255
test = test/255

#running
data_to_submit = predict(parameters,layer_dim, train, y)
correct = data_to_submit.where(data_to_submit.loc[:,'prediction'] == train_csv.loc[:,'label'])
correct_number = correct.count(numeric_only = True)
print('correct',correct_number)
